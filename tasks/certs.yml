---

- name: Check if CA certificate exists
  stat:
    path: "{{ taskd_ca_cert }}"
  register: _result

- name: Get CA certificate info
  openssl_certificate_info:
    path: "{{ taskd_ca_cert }}"
    valid_at:
      now: "+0s"
  register: _result
  when: _result.stat.exists | bool
  become: true

- name: Generate certificates
  block:
    - name: Ensure taskd install location and pki directory exist (even if we installed in from package manager)
      file:
        path: "{{ taskd_install_location }}/pki"
        owner: "{{ taskd_user }}"
        group: "{{ taskd_group }}"
        mode: 0o755
        state: directory
      become: true

    - name: Copy selfsigning vars file to location
      template:
        src: ssl_vars.j2
        dest: "{{ taskd_install_location }}/pki/vars"
        owner: "{{ taskd_user }}"
        group: "{{ taskd_group }}"
      become: true

    - name: Run generate cert script
      shell: ./generate
      args:
        creates: "{{ taskd_install_location }}/pki/ca.key.pem"
        chdir: "{{ taskd_install_location }}/pki/"
      become: true

    - name: Ensure certs directory exists
      file:
        path: "{{ taskd_data_location }}/certs"
        state: directory
        owner: "{{ taskd_user }}"
        group: "{{ taskd_group }}"
      become: true

    - name: Copy generated certs to data location
      copy:
        src: "{{ taskd_install_location }}/pki/{{ item.0 }}"
        dest: "{{ lookup('vars', item.1) }}"
        owner: "{{ taskd_user }}"
        group: "{{ taskd_group }}"
        remote_src: true
      loop: "{{ list1 | zip(list2) | list }}"
      vars:
        list1:
          - server.cert.pem
          - server.key.pem
          - server.crl.pem
          - client.cert.pem
          - client.key.pem
          - ca.cert.pem
          - ca.key.pem
        list2:
          - taskd_server_cert
          - taskd_server_key
          - taskd_server_crl
          - taskd_client_cert
          - taskd_client_key
          - taskd_ca_cert
          - taskd_ca_key
      notify: taskd restart service
      become: true

    - name: Run generate client cert script
      shell: "./generate.client {{ item.name|replace(' ', '_') }}"
      args:
        chdir: "{{ taskd_install_location }}/pki/"
        creates: "{{ taskd_install_location }}/pki/{{
                      item.name|replace(' ', '_') }}.key.pem"
      register: result
      loop: "{{ taskd_users }}"
      become: true

    - name: Create user certs folder
      file:
        path: "{{ taskd_user_cert_location }}"
        owner: "{{ taskd_user }}"
        group: "{{ taskd_group }}"
        mode: 0o755
        state: directory
      become: true

    - name: Move generated user certs
      command: >-
        mv
          {{ taskd_install_location }}/pki/{{ item.name|replace(' ', '_')
            }}.cert.pem
          {{ taskd_install_location }}/pki/{{ item.name|replace(' ', '_')
            }}.key.pem
          {{ taskd_user_cert_location }}/
      when: result.results[index] is changed
      become: true
      loop: "{{ taskd_users }}"
      loop_control:
        index_var: index
  when: _result is failed or _result is skipped
